name: Publish release

on:
  release:
    types: [created]

env:
  IS_TEST: false

jobs:
  publish_release:
    name: Publish release 🐍 🚀
    environment: pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Parse version tag
        id: parse-version-tag
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          tag_name="${{ env.TAG_NAME }}"

          if [[ ! "${tag_name}" =~ ^v.+$ ]]; then
            echo "::error::Tag name must start with 'v'"
            exit 1
          fi

          pypi_output="pypi-version=${tag_name#v}"

          echo "${pypi_output}" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install build twine

      - name: Update package version
        run: |
          echo "VERSION = \"${{ steps.parse-version-tag.outputs.pypi-version }}\"" > ergate/__version__.py

      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .

      - name: Publish package distribution
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ env.IS_TEST == 'true' && 'https://test.pypi.org/legacy/' || 'https://upload.pypi.org/legacy/' }}

  publish_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
